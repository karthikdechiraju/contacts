{"ast":null,"code":"var _jsxFileName = \"/Users/karthikdechiraju/Developer/contacts/client/src/components/modal.js\";\nimport React, { useEffect } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst EditModal = props => {\n  const [name, updateName] = React.useState(\"\");\n  const [email, updateEmail] = React.useState(\"\");\n  const [code, updateCode] = React.useState(\"\");\n  const [nameError, updateNameError] = React.useState(false);\n  const [emailError, updateEmailError] = React.useState(false);\n  const [codeError, updateCodeError] = React.useState(false);\n  useEffect(() => {\n    if (props.data && props.data.name) {\n      updateName(props.data.name);\n    }\n\n    if (props.data && props.data.email) {\n      updateEmail(props.data.email);\n    }\n\n    if (props.data && props.data.country_code) {\n      updateCode(props.data.country_code);\n    }\n  }, [props.data]);\n\n  const validateEmail = mail => {\n    return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail);\n  };\n\n  const handleSubmit = () => {\n    if (name !== \"\" && email !== \"\" && validateEmail(email) && code !== \"\") {\n      let init_data = props.data ? props.data : {};\n      props.handleSubmit({ ...init_data,\n        name,\n        email,\n        country_code: code\n      });\n      clearData();\n    } else {\n      updateEmailError(email === \"\" || !validateEmail(email));\n      updateCodeError(code === \"\");\n      updateNameError(name === \"\");\n    }\n  };\n\n  const clearData = () => {\n    updateEmailError(false);\n    updateCodeError(false);\n    updateNameError(false);\n    updateName(\"\");\n    updateEmail(\"\");\n    updateCode(\"\");\n  };\n\n  const handleClose = () => {\n    clearData();\n    props.handleClose();\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: props.open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, !props.data ? 'Add new contact' : 'Edit contact'), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Name of the person\",\n    type: \"text\",\n    variant: \"outlined\",\n    fullWidth: true,\n    style: {\n      marginRight: 30\n    },\n    value: name,\n    onChange: e => updateName(e.target.value),\n    error: nameError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"country_code\",\n    label: \"Country code\",\n    type: \"text\",\n    variant: \"outlined\",\n    fullWidth: true,\n    value: code,\n    onChange: e => updateCode(e.target.value),\n    error: codeError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"email\",\n    label: \"Email address\",\n    type: \"email\",\n    variant: \"outlined\",\n    fullWidth: true,\n    value: email,\n    onChange: e => updateEmail(e.target.value),\n    error: emailError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"SAVE\")));\n};\n\nexport default EditModal;","map":{"version":3,"sources":["/Users/karthikdechiraju/Developer/contacts/client/src/components/modal.js"],"names":["React","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","EditModal","props","name","updateName","useState","email","updateEmail","code","updateCode","nameError","updateNameError","emailError","updateEmailError","codeError","updateCodeError","data","country_code","validateEmail","mail","test","handleSubmit","init_data","clearData","handleClose","open","display","flexDirection","marginRight","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst EditModal = (props) => {\n    const [name,updateName] = React.useState(\"\")\n    const [email,updateEmail] = React.useState(\"\")\n    const [code,updateCode] = React.useState(\"\")\n\n    const [nameError,updateNameError] = React.useState(false)\n    const [emailError,updateEmailError] = React.useState(false)\n    const [codeError,updateCodeError] = React.useState(false)\n\n    useEffect(()=>{\n        if(props.data && props.data.name){\n            updateName(props.data.name)\n        }\n        if(props.data && props.data.email){\n            updateEmail(props.data.email)\n        }\n        if(props.data && props.data.country_code){\n            updateCode(props.data.country_code)\n        }\n    },[props.data])\n\n\n    const validateEmail = (mail) =>{\n        return (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail))\n    }    \n\n    const handleSubmit = () => {\n        if(name !== \"\" && email !== \"\" && validateEmail(email) && code !== \"\"){\n            let init_data = props.data ? props.data : {}\n            props.handleSubmit({...init_data,name,email,country_code: code})\n            clearData()\n        }else{\n            updateEmailError(email === \"\" || !validateEmail(email))\n            updateCodeError(code === \"\")\n            updateNameError(name === \"\")\n        }\n    }\n\n    const clearData = () => {\n        updateEmailError(false)\n        updateCodeError(false)\n        updateNameError(false)\n        updateName(\"\")\n        updateEmail(\"\")\n        updateCode(\"\")\n    }\n\n    const handleClose = () => {\n        clearData()\n        props.handleClose()\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {!props.data ? 'Add new contact' : 'Edit contact'}\n            </DialogTitle>\n            <DialogContent>\n                <div style={{display:'flex',flexDirection: 'row'}}>\n                    <TextField\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Name of the person\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        fullWidth\n                        style={{marginRight: 30}}\n                        value={name}\n                        onChange={(e) => updateName(e.target.value)}\n                        error={nameError}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"country_code\"\n                        label=\"Country code\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={code}\n                        onChange={(e) => updateCode(e.target.value)}\n                        error={codeError}\n                    />\n                </div>\n                <TextField\n                    margin=\"dense\"\n                    id=\"email\"\n                    label=\"Email address\"\n                    type=\"email\"\n                    variant=\"outlined\"\n                    fullWidth\n                    value={email}\n                    onChange={(e) => updateEmail(e.target.value)}\n                    error={emailError}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\n                    SAVE\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\nexport default EditModal;"]},"metadata":{},"sourceType":"module"}