{"ast":null,"code":"import _objectSpread from\"/Users/karthikdechiraju/Developer/contacts/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/karthikdechiraju/Developer/contacts/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from\"react\";import Button from'@material-ui/core/Button';import TextField from'@material-ui/core/TextField';import Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import DialogTitle from'@material-ui/core/DialogTitle';var EditModal=function EditModal(props){var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),name=_React$useState2[0],updateName=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),email=_React$useState4[0],updateEmail=_React$useState4[1];var _React$useState5=React.useState(\"\"),_React$useState6=_slicedToArray(_React$useState5,2),code=_React$useState6[0],updateCode=_React$useState6[1];var _React$useState7=React.useState(false),_React$useState8=_slicedToArray(_React$useState7,2),nameError=_React$useState8[0],updateNameError=_React$useState8[1];var _React$useState9=React.useState(false),_React$useState10=_slicedToArray(_React$useState9,2),emailError=_React$useState10[0],updateEmailError=_React$useState10[1];var _React$useState11=React.useState(false),_React$useState12=_slicedToArray(_React$useState11,2),codeError=_React$useState12[0],updateCodeError=_React$useState12[1];useEffect(function(){if(props.data&&props.data.name){updateName(props.data.name);}if(props.data&&props.data.email){updateEmail(props.data.email);}if(props.data&&props.data.country_code){updateCode(props.data.country_code);}},[props.data]);var validateEmail=function validateEmail(mail){return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail);};var handleSubmit=function handleSubmit(){if(name!==\"\"&&email!==\"\"&&validateEmail(email)&&code!==\"\"){var init_data=props.data?props.data:{};props.handleSubmit(_objectSpread(_objectSpread({},init_data),{},{name:name,email:email,country_code:code}));clearData();}else{updateEmailError(email===\"\"||!validateEmail(email));updateCodeError(code===\"\");updateNameError(name===\"\");}};var clearData=function clearData(){updateEmailError(false);updateCodeError(false);updateNameError(false);updateName(\"\");updateEmail(\"\");updateCode(\"\");};var handleClose=function handleClose(){clearData();props.handleClose();};return/*#__PURE__*/React.createElement(Dialog,{open:props.open,onClose:handleClose,\"aria-labelledby\":\"form-dialog-title\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"form-dialog-title\"},!props.data?'Add new contact':'Edit contact'),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',flexDirection:'row'}},/*#__PURE__*/React.createElement(TextField,{margin:\"dense\",id:\"name\",label:\"Name of the person\",type:\"text\",variant:\"outlined\",fullWidth:true,style:{marginRight:30},value:name,onChange:function onChange(e){return updateName(e.target.value);},error:nameError}),/*#__PURE__*/React.createElement(TextField,{margin:\"dense\",id:\"country_code\",label:\"Country code\",type:\"text\",variant:\"outlined\",fullWidth:true,value:code,onChange:function onChange(e){return updateCode(e.target.value);},error:codeError})),/*#__PURE__*/React.createElement(TextField,{margin:\"dense\",id:\"email\",label:\"Email address\",type:\"email\",variant:\"outlined\",fullWidth:true,value:email,onChange:function onChange(e){return updateEmail(e.target.value);},error:emailError})),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:handleSubmit,variant:\"contained\",color:\"primary\"},\"SAVE\")));};export default EditModal;","map":{"version":3,"sources":["/Users/karthikdechiraju/Developer/contacts/client/src/components/modal.js"],"names":["React","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","EditModal","props","useState","name","updateName","email","updateEmail","code","updateCode","nameError","updateNameError","emailError","updateEmailError","codeError","updateCodeError","data","country_code","validateEmail","mail","test","handleSubmit","init_data","clearData","handleClose","open","display","flexDirection","marginRight","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst EditModal = (props) => {\n    const [name,updateName] = React.useState(\"\")\n    const [email,updateEmail] = React.useState(\"\")\n    const [code,updateCode] = React.useState(\"\")\n\n    const [nameError,updateNameError] = React.useState(false)\n    const [emailError,updateEmailError] = React.useState(false)\n    const [codeError,updateCodeError] = React.useState(false)\n\n    useEffect(()=>{\n        if(props.data && props.data.name){\n            updateName(props.data.name)\n        }\n        if(props.data && props.data.email){\n            updateEmail(props.data.email)\n        }\n        if(props.data && props.data.country_code){\n            updateCode(props.data.country_code)\n        }\n    },[props.data])\n\n\n    const validateEmail = (mail) =>{\n        return (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail))\n    }    \n\n    const handleSubmit = () => {\n        if(name !== \"\" && email !== \"\" && validateEmail(email) && code !== \"\"){\n            let init_data = props.data ? props.data : {}\n            props.handleSubmit({...init_data,name,email,country_code: code})\n            clearData()\n        }else{\n            updateEmailError(email === \"\" || !validateEmail(email))\n            updateCodeError(code === \"\")\n            updateNameError(name === \"\")\n        }\n    }\n\n    const clearData = () => {\n        updateEmailError(false)\n        updateCodeError(false)\n        updateNameError(false)\n        updateName(\"\")\n        updateEmail(\"\")\n        updateCode(\"\")\n    }\n\n    const handleClose = () => {\n        clearData()\n        props.handleClose()\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {!props.data ? 'Add new contact' : 'Edit contact'}\n            </DialogTitle>\n            <DialogContent>\n                <div style={{display:'flex',flexDirection: 'row'}}>\n                    <TextField\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Name of the person\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        fullWidth\n                        style={{marginRight: 30}}\n                        value={name}\n                        onChange={(e) => updateName(e.target.value)}\n                        error={nameError}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"country_code\"\n                        label=\"Country code\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={code}\n                        onChange={(e) => updateCode(e.target.value)}\n                        error={codeError}\n                    />\n                </div>\n                <TextField\n                    margin=\"dense\"\n                    id=\"email\"\n                    label=\"Email address\"\n                    type=\"email\"\n                    variant=\"outlined\"\n                    fullWidth\n                    value={email}\n                    onChange={(e) => updateEmail(e.target.value)}\n                    error={emailError}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\n                    SAVE\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\nexport default EditModal;"]},"metadata":{},"sourceType":"module"}