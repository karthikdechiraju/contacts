{"version":3,"sources":["components/tableHead.js","utils/httpUtils.js","utils/dateModifier.js","components/floatingMenu.js","components/modal.js","components/snackbar.js","components/table.js","App.js","serviceWorker.js","index.js"],"names":["headCells","id","numeric","disablePadding","label","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","width","TableHeadComponent","props","order","orderBy","onRequestSort","classes","TableHead","TableRow","map","headCell","TableCell","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","style","fontWeight","className","headers","dateModifier","date","newDate","Date","getDate","parseInt","getMonth","getFullYear","options","LongMenu","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","e","data","onEdit","onDelete","IconButton","aria-label","aria-controls","currentTarget","Menu","onClose","PaperProps","maxHeight","ITEM_HEIGHT","option","MenuItem","EditModal","name","updateName","email","updateEmail","code","updateCode","nameError","updateNameError","emailError","updateEmailError","codeError","updateCodeError","useEffect","country_code","validateEmail","mail","test","clearData","Dialog","aria-labelledby","DialogTitle","DialogContent","display","flexDirection","TextField","type","variant","fullWidth","marginRight","value","onChange","target","error","DialogActions","Button","init_data","handleSubmit","color","Alert","elevation","Snackbar","message","severity","isError","descendingComparator","a","b","useStyles","marginBottom","paper","table","minWidth","ContactsTable","setOrder","setOrderBy","page","setPage","rows","setRows","setData","isModalVisible","setModalVisibility","activeContact","setActiveContact","setError","axios","get","then","res","search","newRows","filter","item","includes","showSnackBar","setTimeout","_id","delete","catch","response","Paper","TableContainer","Table","size","rowCount","length","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","hover","tabIndex","created_at","justifyContent","alignItems","updated_at","TablePagination","rowsPerPageOptions","component","count","rowsPerPage","onChangePage","newPage","put","updateContact","post","createContact","zIndex","bottom","right","Fab","flexGrow","menuButton","title","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","SearchAppBar","updateSearch","AppBar","Toolbar","Typography","noWrap","InputBase","placeholder","input","inputProps","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.2120d688.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\n\nconst headCells = [\n    { id: \"name\", numeric: false, disablePadding: true, label: \"Name\" },\n    {\n        id: \"email\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Email Address\",\n    },\n    { id: \"country_code\", numeric: false, disablePadding: false, label: \"Country Code\" },\n    {\n        id: \"created_at\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Created Date\",\n    },\n    {\n        id: \"updated_at\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Last Modified date\",\n    },\n];\n\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n      },\n}));\n\n\n\n\nconst TableHeadComponent = (props) => {\n    const { order, orderBy, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n    const classes = useToolbarStyles();\n\n    return (\n        <>\n            <TableHead>\n                <TableRow>\n                    {headCells.map((headCell) => (\n                        <TableCell\n                            key={headCell.id}\n                            align={\"left\"}\n                            padding={\"default\"}\n                            sortDirection={\n                                orderBy === headCell.id ? order : false\n                            }\n                        >\n                            <TableSortLabel\n                                active={orderBy === headCell.id}\n                                direction={\n                                    orderBy === headCell.id ? order : \"asc\"\n                                }\n                                onClick={createSortHandler(headCell.id)}\n                                style={{fontWeight: 'bold'}}\n                            >\n                                {headCell.label}\n                                {orderBy === headCell.id ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {order === \"desc\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n        </>\n    );\n};\n\nTableHeadComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nexport default TableHeadComponent;","import axios from 'axios';\n\nconst headers = {\n    'Authorization': `Basic ZGVtbzpwQDU1dzByZA==`,\n    'Content-Type': \"application/json\"\n}\n\nexport const getContacts = () => {\n    return axios.get('/api/contacts',{\n        headers\n    })\n}\n\nexport const createContact = (data) => {\n    return axios.post('/api/contacts',data,{\n        headers\n    })\n}\n\nexport const updateContact = (data) => {\n    return axios.put('/api/contacts',data,{\n        headers\n    })\n}\n\nexport const deleteContact = (id) =>{\n    return axios.delete(`/api/contacts?id=${id}`,{\n        headers\n    })\n}","export const dateModifier = (date) => {\n    let newDate = new Date(date)\n    return newDate.getDate() + '-' + parseInt(newDate.getMonth() + 1) + '-' + newDate.getFullYear()\n}","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\n\nconst options = [\"edit\", \"delete\"];\n\nconst ITEM_HEIGHT = 48;\n\nconst LongMenu = (props) => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = (e,data) => () => {\n        if(e){\n            if(e === \"edit\"){\n                props.onEdit(data)\n            }else{\n                props.onDelete(data)\n            }\n        }\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <IconButton\n                aria-label=\"more\"\n                aria-controls=\"long-menu\"\n                // aria-haspopup=\"true\"\n                onClick={handleClick}\n            >\n                <MoreVertIcon />\n            </IconButton>\n            <Menu\n                id=\"long-menu\"\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose()}\n                PaperProps={{\n                    style: {\n                        maxHeight: ITEM_HEIGHT * 4.5,\n                        width: \"20ch\",\n                    },\n                }}\n            >\n                {options.map((option) => (\n                    <MenuItem\n                        key={option}\n                        onClick={handleClose(option,props.data)}\n                    >\n                        {option}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </div>\n    );\n}\n\nexport default LongMenu;","import React, { useEffect } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst EditModal = (props) => {\n    const [name,updateName] = React.useState(\"\")\n    const [email,updateEmail] = React.useState(\"\")\n    const [code,updateCode] = React.useState(\"\")\n\n    const [nameError,updateNameError] = React.useState(false)\n    const [emailError,updateEmailError] = React.useState(false)\n    const [codeError,updateCodeError] = React.useState(false)\n\n    useEffect(()=>{\n        if(props.data && props.data.name){\n            updateName(props.data.name)\n        }\n        if(props.data && props.data.email){\n            updateEmail(props.data.email)\n        }\n        if(props.data && props.data.country_code){\n            updateCode(props.data.country_code)\n        }\n    },[props.data])\n\n\n    const validateEmail = (mail) =>{\n        return (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail))\n    }    \n\n    const handleSubmit = () => {\n        if(name !== \"\" && email !== \"\" && validateEmail(email) && code !== \"\"){\n            let init_data = props.data ? props.data : {}\n            props.handleSubmit({...init_data,name,email,country_code: code})\n            clearData()\n        }else{\n            updateEmailError(email === \"\" || !validateEmail(email))\n            updateCodeError(code === \"\")\n            updateNameError(name === \"\")\n        }\n    }\n\n    const clearData = () => {\n        updateEmailError(false)\n        updateCodeError(false)\n        updateNameError(false)\n        updateName(\"\")\n        updateEmail(\"\")\n        updateCode(\"\")\n    }\n\n    const handleClose = () => {\n        clearData()\n        props.handleClose()\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {!props.data ? 'Add new contact' : 'Edit contact'}\n            </DialogTitle>\n            <DialogContent>\n                <div style={{display:'flex',flexDirection: 'row'}}>\n                    <TextField\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Name of the person\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        fullWidth\n                        style={{marginRight: 30}}\n                        value={name}\n                        onChange={(e) => updateName(e.target.value)}\n                        error={nameError}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"country_code\"\n                        label=\"Country code\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={code}\n                        onChange={(e) => updateCode(e.target.value)}\n                        error={codeError}\n                    />\n                </div>\n                <TextField\n                    margin=\"dense\"\n                    id=\"email\"\n                    label=\"Email address\"\n                    type=\"email\"\n                    variant=\"outlined\"\n                    fullWidth\n                    value={email}\n                    onChange={(e) => updateEmail(e.target.value)}\n                    error={emailError}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\n                    SAVE\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\nexport default EditModal;","import React from 'react'\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { Snackbar as SnackbarComponent} from '@material-ui/core';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport const Snackbar = (props) => {\n    return (\n        <SnackbarComponent open={props.message && props.message !== \"\"}>\n            <Alert severity={props.isError ? \"error\" : \"success\"}>{props.message}</Alert>\n        </SnackbarComponent>\n    );\n};\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableHeadComponent from \"../components/tableHead\";\nimport { getContacts, createContact, updateContact, deleteContact } from '../utils/httpUtils'\nimport { dateModifier } from \"../utils/dateModifier\";\nimport LongMenu from '../components/floatingMenu'\nimport EditModal from \"./modal\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport { Snackbar } from '../components/snackbar'\n\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n        marginBottom: 100\n    },\n    paper: {\n        width: \"100%\",\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nconst rowsPerPage = 10\n\nconst ContactsTable = (props) => {\n    \n    const classes = useStyles();\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"calories\");\n    const [page, setPage] = React.useState(0);\n    const [rows, setRows] = React.useState([])\n    const [data, setData] = React.useState([])\n    const [isModalVisible, setModalVisibility] = React.useState(false)\n    const [activeContact, setActiveContact] = React.useState(null)\n    const [error, setError] = React.useState({\n        isError: false,\n        message: \"\"\n    })\n    \n    \n    useEffect(() => {\n        getContacts().then(res => {\n            setRows(res.data.data)\n            setData(res.data.data)\n        })\n    },[]);\n\n    useEffect(()=>{\n        if(props.search !== \"\"){\n            let newRows = rows.filter(item => item.name.includes(props.search) || item.email.includes(props.search))\n            setRows(newRows)\n        }else{\n            setRows(data)\n        }\n    },[props.search,data])\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n        setOrderBy(property);\n    };\n\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const onEdit = (data) => {\n        setActiveContact(data)\n        setModalVisibility(true)\n    }\n\n\n    const showSnackBar = (isError, message) => {\n        setError({\n            isError,\n            message\n        })\n        setTimeout(()=>{\n            setError({\n                isError: false,\n                message: \"\"\n            })\n        },5000)\n    }\n\n    const onDelete = (data) => {\n        deleteContact(data._id).then(res=>{\n            let newRows = rows.filter(item => item._id !== data._id)\n            setRows(newRows)\n            showSnackBar(false,\"contact deleted successfully\")\n        }).catch(e =>{\n            showSnackBar(true,e.response && e.response.data && e.response.data.error ? e.response.data.error : \"Something went wrong\")\n        })\n    }\n\n\n    const handleSubmit = (data) => {\n        if(activeContact){\n            // update\n            updateContact(data).then(res => {\n                let newRows = rows.map(item => {\n                    if(item._id === data._id){\n                        return res.data.data\n                    }else{\n                        return item\n                    }\n                })\n                setRows(newRows)\n                setActiveContact(null)\n                setModalVisibility(false)\n                showSnackBar(false,\"contact updated successfully\")\n            }).catch(e => {\n                setActiveContact(null)\n                setModalVisibility(false)\n                showSnackBar(true,e.response && e.response.data && e.response.data.error ? e.response.data.error : \"Something went wrong\")\n            })\n        }else{\n            // create\n            createContact(data).then(res => {\n                let newRows = [res.data.data,...rows]\n                setRows(newRows)\n                setActiveContact(null)\n                setModalVisibility(false)\n                showSnackBar(false,\"contact created successfully\")\n            }).catch(e => {\n                showSnackBar(true,e.response && e.response.data && e.response.data.error ? e.response.data.error : \"Something went wrong\")\n                setActiveContact(null)\n                setModalVisibility(false)\n            })\n        }\n    }\n    // const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    return (\n        <div className={classes.root}>\n            <Snackbar isError={error.isError} message={error.message} />\n            <Paper className={classes.paper}>\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={\"medium\"}\n                        aria-label=\"enhanced table\"\n                    >\n                        <TableHeadComponent\n                            classes={classes}\n                            order={order}\n                            orderBy={orderBy}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice( page * rowsPerPage, page * rowsPerPage + rowsPerPage )\n                                .map(row => {\n                                    return (\n                                        <TableRow hover tabIndex={-1} key={row.name} >\n                                            <TableCell>{row.name}</TableCell>\n                                            <TableCell>{row.email}</TableCell>\n                                            <TableCell >{row.country_code}</TableCell>\n                                            <TableCell >{dateModifier(row.created_at)}</TableCell>\n                                            <TableCell style={{\n                                                display: \"flex\",\n                                                flexDirection: \"row\",\n                                                justifyContent: \"space-between\",\n                                                alignItems: \"center\",\n                                            }}>\n                                                {dateModifier(row.updated_at)}\n                                                <LongMenu onDelete={onDelete} onEdit={onEdit} data={row} />\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                />\n            </Paper>\n            <EditModal \n                open={isModalVisible}\n                data={activeContact}\n                handleClose={() => {\n                    setModalVisibility(false)\n                    setActiveContact(null)\n                }}\n                handleSubmit={handleSubmit}\n            />\n            <div style={{position:\"fixed\", zIndex: 9999, bottom: 30, right: 30}}>\n                <Fab \n                    color=\"primary\" \n                    aria-label=\"add\"\n                    onClick={() => setModalVisibility(true)}\n                >\n                    <AddIcon />\n                </Fab>\n            </div>\n        </div>\n    );\n};\n\nexport default ContactsTable;","import React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Table from './components/table'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '40ch',\n      '&:focus': {\n        width: '70ch',\n      },\n    },\n  },\n}));\n\n\n\n\nexport default function SearchAppBar() {\n  const classes = useStyles();\n\n  const [search,updateSearch] = useState(\"\")\n\n  const onSearch = (e) => {\n    updateSearch(e.target.value)\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Contacts\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              onChange={onSearch}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Table \n        search={search}\n      />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}